---
source_name: "Store"
source_description: "complex json"
ingestion_parameters:
  file_mask: "JSON/store.json"
  delete_file: false
  use_legacy_hive_metastore: true
parsing_parameters:
  multiLine: true
  schema_evolution: "Add, Remove, Upcast"
file_type: "json"
connection_type: "file"
connection_name: "s3 df public"
schedule_name: "Default"
raw_attributes:
- raw_attribute_name: "owner"
  data_type: "string"
- raw_attribute_name: "store"
  data_type: "struct"
  datatype_schema:
    type: "struct"
    fields:
    - name: "basket"
      type:
        type: "array"
        elementType:
          type: "array"
          elementType: "long"
          containsNull: true
        containsNull: true
      metadata: {}
      nullable: true
    - name: "bicycle"
      type:
        type: "struct"
        fields:
        - name: "color"
          type: "string"
          metadata: {}
          nullable: true
        - name: "price"
          type: "double"
          metadata: {}
          nullable: true
      metadata: {}
      nullable: true
    - name: "book"
      type:
        type: "array"
        elementType:
          type: "struct"
          fields:
          - name: "author"
            type: "string"
            metadata: {}
            nullable: true
          - name: "category"
            type: "string"
            metadata: {}
            nullable: true
          - name: "isbn"
            type: "string"
            metadata: {}
            nullable: true
          - name: "isbn code"
            type: "string"
            metadata: {}
            nullable: true
          - name: "price"
            type: "double"
            metadata: {}
            nullable: true
          - name: "reader"
            type:
              type: "array"
              elementType:
                type: "struct"
                fields:
                - name: "age"
                  type: "long"
                  metadata: {}
                  nullable: true
                - name: "country"
                  type: "string"
                  metadata: {}
                  nullable: true
                - name: "name"
                  type: "string"
                  metadata: {}
                  nullable: true
              containsNull: true
            metadata: {}
            nullable: true
          - name: "title"
            type: "string"
            metadata: {}
            nullable: true
        containsNull: true
      metadata: {}
      nullable: true
    - name: "fruit"
      type:
        type: "array"
        elementType:
          type: "struct"
          fields:
          - name: "quanitity"
            type: "long"
            metadata: {}
            nullable: true
          - name: "type"
            type: "string"
            metadata: {}
            nullable: true
          - name: "weight"
            type: "long"
            metadata: {}
            nullable: true
        containsNull: true
      metadata: {}
      nullable: true
- raw_attribute_name: "testid"
  data_type: "string"
- raw_attribute_name: "zip_code"
  data_type: "string"
rules:
- attribute_name: "avg_part_price"
  name: "avg part price"
  datatype: "decimal"
  expression: "avg([tpch.part].p_retailprice)"
  expression_parsed: "A<1>"
  parameters:
  - id: 1
    type: "raw"
    name: "p_retailprice"
    source_name: "tpch.part"
    relations:
    - "[Store]-part-[tpch.part]"
    aggregation_id: 1
  aggregations:
  - id: 1
    expression: "avg(P<1>)"
    function: "avg"
    relations:
    - "[Store]-part-[tpch.part]"
- attribute_name: "book"
  name: "book"
  datatype: "array"
  datatype_schema:
    type: "array"
    elementType:
      type: "struct"
      fields:
      - name: "author"
        type: "string"
        metadata: {}
        nullable: false
      - name: "category"
        type: "string"
        metadata: {}
        nullable: false
      - name: "isbn"
        type: "string"
        metadata: {}
        nullable: false
      - name: "isbn code"
        type: "string"
        metadata: {}
        nullable: false
      - name: "price"
        type: "double"
        metadata: {}
        nullable: false
      - name: "reader"
        type:
          type: "array"
          elementType:
            type: "struct"
            fields:
            - name: "age"
              type: "long"
              metadata: {}
              nullable: false
            - name: "country"
              type: "string"
              metadata: {}
              nullable: false
            - name: "name"
              type: "string"
              metadata: {}
              nullable: false
          containsNull: false
        metadata: {}
        nullable: false
      - name: "title"
        type: "string"
        metadata: {}
        nullable: false
    containsNull: false
  expression: "[This].store.book"
  expression_parsed: "P<1>.book"
  parameters:
  - id: 1
    type: "raw"
    name: "store"
- attribute_name: "cust_name"
  name: "cust name"
  datatype: "string"
  expression: "[tpch.customer].c_name"
  expression_parsed: "P<1>"
  parameters:
  - id: 1
    type: "raw"
    name: "c_name"
    source_name: "tpch.customer"
    relations:
    - "[Store]-cust-[tpch.customer]"
- attribute_name: "str"
  name: "str"
  datatype: "string"
  expression: "[This].owner"
  expression_parsed: "P<1>"
  parameters:
  - id: 1
    type: "raw"
    name: "owner"
- attribute_name: "sub_book"
  name: "sub book"
  datatype: "array"
  datatype_schema:
    type: "array"
    elementType:
      type: "struct"
      fields:
      - name: "author"
        type: "string"
        metadata: {}
        nullable: false
      - name: "category"
        type: "string"
        metadata: {}
        nullable: false
      - name: "isbn"
        type: "string"
        metadata: {}
        nullable: false
      - name: "isbn code"
        type: "string"
        metadata: {}
        nullable: false
      - name: "price"
        type: "double"
        metadata: {}
        nullable: false
      - name: "reader"
        type:
          type: "array"
          elementType:
            type: "struct"
            fields:
            - name: "age"
              type: "long"
              metadata: {}
              nullable: false
            - name: "country"
              type: "string"
              metadata: {}
              nullable: false
            - name: "name"
              type: "string"
              metadata: {}
              nullable: false
          containsNull: false
        metadata: {}
        nullable: false
      - name: "title"
        type: "string"
        metadata: {}
        nullable: false
    containsNull: false
  expression: "[This].book"
  expression_parsed: "P<1>"
  rule_type_code: "S"
  parameters:
  - id: 1
    type: "enrichment"
    name: "book"
- attribute_name: "sub_fruit"
  name: "sub fruit"
  datatype: "array"
  datatype_schema:
    type: "array"
    elementType:
      type: "struct"
      fields:
      - name: "quanitity"
        type: "long"
        metadata: {}
        nullable: false
      - name: "type"
        type: "string"
        metadata: {}
        nullable: false
      - name: "weight"
        type: "long"
        metadata: {}
        nullable: false
    containsNull: false
  expression: "[This].store.fruit"
  expression_parsed: "P<1>.fruit"
  rule_type_code: "S"
  parameters:
  - id: 1
    type: "raw"
    name: "store"
- attribute_name: "sub_fruit_quantity_sum"
  name: "sub fruit quantity sum"
  datatype: "long"
  expression: "sum([Store-sub fruit].quanitity)"
  expression_parsed: "A<1>"
  active_flag: false
- attribute_name: "sum_of_price_x4"
  name: "sum of price x4"
  datatype: "double"
  expression: "sum([Store-sub book].price_x4)"
  expression_parsed: "A<1>"
  parameters:
  - id: 1
    type: "enrichment"
    name: "price_x4"
    source_name: "Store-sub book"
    relations:
    - "[Store]-Implicit-[Store-sub book]"
    aggregation_id: 1
  aggregations:
  - id: 1
    expression: "sum(P<1>)"
    function: "sum"
    relations:
    - "[Store]-Implicit-[Store-sub book]"
channels:
- output_name: "json"
  output_source_columns:
  - name: "avg_part_price"
    expression: "[This].avg_part_price"
    datatype: "decimal"
    parameter:
      name: "avg_part_price"
      type: "enrichment"
  - name: "book"
    expression: "[This].book"
    datatype: "array"
    parameter:
      name: "book"
      type: "enrichment"
  - name: "cust_name"
    expression: "[This].cust_name"
    datatype: "string"
    parameter:
      name: "cust_name"
      type: "enrichment"
  - name: "owner"
    expression: "[This].owner"
    datatype: "string"
    parameter:
      name: "owner"
      type: "raw"
  - name: "store"
    expression: "[This].store"
    datatype: "struct"
    parameter:
      name: "store"
      type: "raw"
  - name: "str"
    expression: "[This].str"
    datatype: "string"
    parameter:
      name: "str"
      type: "enrichment"
  - name: "sub_book"
    expression: "[This].sub_book"
    datatype: "array"
    parameter:
      name: "sub_book"
      type: "enrichment"
  - name: "sub_fruit"
    expression: "[This].sub_fruit"
    datatype: "array"
    parameter:
      name: "sub_fruit"
      type: "enrichment"
  - name: "sub_fruit_quantity_sum"
    expression: "[This].sub_fruit_quantity_sum"
    datatype: "long"
    parameter:
      name: "sub_fruit_quantity_sum"
      type: "enrichment"
  - name: "sum_of_price_x4"
    expression: "[This].sum_of_price_x4"
    datatype: "double"
    parameter:
      name: "sum_of_price_x4"
      type: "enrichment"
  - name: "testid"
    expression: "[This].testid"
    datatype: "string"
    parameter:
      name: "testid"
      type: "raw"
  - name: "zip_code"
    expression: "[This].zip_code"
    datatype: "string"
    parameter:
      name: "zip_code"
      type: "raw"
- output_name: "virtual store"
  output_source_columns:
  - name: "avg_part_price"
    expression: "[This].avg_part_price"
    datatype: "decimal"
    parameter:
      name: "avg_part_price"
      type: "enrichment"
  - name: "book"
    expression: "[This].book"
    datatype: "array"
    parameter:
      name: "book"
      type: "enrichment"
  - name: "cust_name"
    expression: "[This].cust_name"
    datatype: "string"
    parameter:
      name: "cust_name"
      type: "enrichment"
  - name: "owner"
    expression: "[This].owner"
    datatype: "string"
    parameter:
      name: "owner"
      type: "raw"
  - name: "store"
    expression: "[This].store"
    datatype: "struct"
    parameter:
      name: "store"
      type: "raw"
  - name: "str"
    expression: "[This].str"
    datatype: "string"
    parameter:
      name: "str"
      type: "enrichment"
  - name: "sub_book"
    expression: "[This].sub_book"
    datatype: "array"
    parameter:
      name: "sub_book"
      type: "enrichment"
  - name: "sum_of_price_x4"
    expression: "[This].sum_of_price_x4"
    datatype: "double"
    parameter:
      name: "sum_of_price_x4"
      type: "enrichment"
  - name: "testid"
    expression: "[This].testid"
    datatype: "string"
    parameter:
      name: "testid"
      type: "raw"
  - name: "zip_code"
    expression: "[This].zip_code"
    datatype: "string"
    parameter:
      name: "zip_code"
      type: "raw"
